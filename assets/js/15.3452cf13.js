(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{218:function(t,s,a){t.exports=a.p+"assets/img/event-loop-3.d3b32727.png"},251:function(t,s,a){"use strict";a.r(s);var n=a(0),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"event-loop-进阶：macrotask-与-microtask"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#event-loop-进阶：macrotask-与-microtask"}},[t._v("#")]),t._v(" Event loop 进阶：macrotask 与 microtask")]),t._v(" "),n("p",[t._v("上文中将 JS 事件循环机制梳理了一遍，在 ES5 的情况是够用了，但是在 ES6 盛行的现在，仍然会遇到一些问题，譬如下面这题：")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[t._v("console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'script start'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("setTimeout")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'setTimeout'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\nPromise"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("resolve")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("then")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'promise1'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("then")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'promise2'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nconsole"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'script end'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),n("p",[t._v("它的正确执行顺序是这样子的：")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("script start\nscript end\npromise1\npromise2\nsetTimeout\n")])])]),n("p",[n("router-link",{attrs:{to:"/event-loop/[https://jakearchibald.com/2015/tasks-microtasks-queues-and-schedules/"}},[t._v("https://jakearchibald.com/2015/tasks-microtasks-queues-and-schedules/")]),t._v("感兴趣的可以看这篇文章的动态例子。")],1),t._v(" "),n("p",[t._v("为什么呢，因为 Promise 里有了一个新的概念："),n("code",[t._v("microtask")]),t._v("。")]),t._v(" "),n("p",[t._v("或者，进一步，JS 中分为两种任务类型："),n("code",[t._v("macrotask")]),t._v(" 和 "),n("code",[t._v("microtask")]),t._v("，在 ECMAScript 中，microtask 称为 "),n("code",[t._v("jobs")]),t._v("，macrotask 可称为 "),n("code",[t._v("task")]),t._v("。")]),t._v(" "),n("h3",{attrs:{id:"它们的定义？区别？简单点可以按如下理解："}},[n("a",{staticClass:"header-anchor",attrs:{href:"#它们的定义？区别？简单点可以按如下理解："}},[t._v("#")]),t._v(" 它们的定义？区别？简单点可以按如下理解：")]),t._v(" "),n("ul",[n("li",[n("strong",[t._v("macrotask（又称为宏任务），可以理解是每次执行栈执行的代码就是一个宏任务（包括每次从事件队列中获取一个事件回调并放到执行栈中执行）")]),t._v(" "),n("ul",[n("li",[t._v("每一个 "),n("code",[t._v("task")]),t._v(" 会从头到尾将这个任务执行完毕，不会执行其它。")]),t._v(" "),n("li",[t._v("浏览器为了能够使得 JS 内部 task 与 DOM 任务能够有序的执行，会在一个 "),n("code",[t._v("task")]),t._v("执行结束后，在下一个 "),n("code",[t._v("task")]),t._v(" 执行开始前，对页面进行重新渲染（"),n("code",[t._v("task->渲染->task->...")]),t._v("）。")])])]),t._v(" "),n("li",[n("strong",[t._v("micortask（又称为微任务），可以理解是在当前 "),n("code",[t._v("task")]),t._v(" 执行结束后立即执行的任务。")]),t._v(" "),n("ul",[n("li",[t._v("也就是说，在当前 "),n("code",[t._v("task")]),t._v(" 任务后，下一个 "),n("code",[t._v("task")]),t._v(" 之前，在渲染之前")]),t._v(" "),n("li",[t._v("所以它的响应速度比 "),n("code",[t._v("setTimeout")]),t._v(" （setTimeout 是 "),n("code",[t._v("task")]),t._v("），会更快，因为无需等渲染。")]),t._v(" "),n("li",[t._v("也就是说，在某一个 "),n("code",[t._v("microtask")]),t._v(" 执行完后，就会将它执行期间产生的所有 "),n("code",[t._v("micortask")]),t._v(" 都执行完毕（在渲染前）。\n微任务使得我们能够在重新渲染 UI 之前执行指定的行为，避免不必要的 UI 重绘，UI 重绘会使应用状态不连续。")])])])]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("macroTask "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("of")]),t._v(" macroTaskQueue"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1. Handle current MACRO-TASK")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("handleMacroTask")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 2. Handle all MICRO-TASK")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("microTask "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("of")]),t._v(" microTaskQueue"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("handleMicroTask")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("microTask"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("h3",{attrs:{id:"分别是什么样的场景会形成-macrotask-和-microtask-呢？"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#分别是什么样的场景会形成-macrotask-和-microtask-呢？"}},[t._v("#")]),t._v(" 分别是什么样的场景会形成 macrotask 和 microtask 呢？")]),t._v(" "),n("p",[n("code",[t._v("macrotask")]),t._v(" 和 "),n("code",[t._v("micortask")]),t._v(" 表示异步任务的两种分类，在挂起时，JS 引擎回将所有的任务按照类别分到这两个队列中。")]),t._v(" "),n("ul",[n("li",[n("strong",[t._v("macrotask")]),t._v("：script（整体代码），"),n("code",[t._v("setTimeout")]),t._v("，"),n("code",[t._v("setInterval")]),t._v("，"),n("code",[t._v("setImmediate")]),t._v("，I/O，UI rendering等（可以看到，事件队列中的每一个事件都是一个 macrotask）。")]),t._v(" "),n("li",[n("strong",[t._v("microtask：")]),n("code",[t._v("Promise")]),t._v("（这里指浏览器实现的原生的 Promise），"),n("code",[t._v("process.nextTick")]),t._v(" 、"),n("code",[t._v("Object.observe")]),t._v("、"),n("code",[t._v("MutationObserver")]),t._v("等。")])]),t._v(" "),n("p",[t._v("补充：**在 node 环境下，process.nextTick 的优先级高于 Promise，**也就是可以简单理解为：在宏任务结束后会先执行微任务队列中的 "),n("code",[t._v("nextTickQueue")]),t._v(" 部分呢，然后才会执行微任务中的 "),n("code",[t._v("Promise")]),t._v(" 部分。")]),t._v(" "),n("p",[t._v("看下面的例子输出：")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[t._v("process"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("nextTick")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Promise")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("resolve")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 注意，new Promise是同步的，会马上执行function参数中的事情。")]),t._v("\n  console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("resolve")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("then")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nprocess"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("nextTick")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/// 这段代码运行的结果是 1 2 4 3 5")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/// process.nexTick 永远大于 promise.then，原因是在 Node 中，_tickCallback 在每一次执行完 TaskQueue 中的一个任务后被调用，而这个 _tickCallback 中实质上干了两件事：")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1. nextTickQueue 中所有任务执行掉")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 2. 第一步执行完后执行 _runMicroTasks 函数，执行 microtask 中的部分（promise.then 注册的回调）")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 所以 process.nextTick > promise.then")]),t._v("\n\n")])])]),n("h3",{attrs:{id:"结合线程来理解"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#结合线程来理解"}},[t._v("#")]),t._v(" 结合线程来理解")]),t._v(" "),n("ul",[n("li",[n("code",[t._v("macrotask")]),t._v(" 中的事件都是放在一个事件队列中的，而这个队列由"),n("strong",[t._v("事件触发线程")]),t._v("维护。")]),t._v(" "),n("li",[n("code",[t._v("micortask")]),t._v(" 中的所有微任务都是添加到微任务队列（Job Queues）中，等待当你 "),n("code",[t._v("macrotask")]),t._v("执行完毕后执行，而这个队列由 "),n("code",[t._v("JS 引擎线程维护")]),t._v("（因为它是在主线程下无缝执行的）。\n如这里")])]),t._v(" "),n("p",[t._v("所以，总结下运行机制：")]),t._v(" "),n("p",[t._v("一个浏览器环境（浏览器内核）只能有一个事件循环（Event loop），而一个事件循环可以有多个"),n("strong",[t._v("任务队列（Task queue）")]),t._v("，每个任务都有一个任务源（Task source）（timer 的回调、鼠标事件等）")]),t._v(" "),n("ul",[n("li",[t._v("相同任务源的任务，只能放到一个任务队列中。")]),t._v(" "),n("li",[t._v("不同任务源的任务，可以放到不同任务队列中。")]),t._v(" "),n("li",[t._v("同一个任务队列中的任务必须按先进先出的顺序执行。")])]),t._v(" "),n("p",[t._v("具体看 HTML 规范，HTML的事件循环吧。\n"),n("a",{attrs:{href:"https://html.spec.whatwg.org/multipage/webappapis.html#event-loops",target:"_blank",rel:"noopener noreferrer"}},[t._v("6.1.4 Event loops"),n("OutboundLink")],1)]),t._v(" "),n("p",[t._v("执行流程：")]),t._v(" "),n("ul",[n("li",[t._v("执行一个宏任务（栈中没有就从时间队列中获取）。")]),t._v(" "),n("li",[t._v("执行过程中如果遇到微任务，就将它添加到微任务的任务队列中。")]),t._v(" "),n("li",[t._v("宏任务执行完毕后，立即执行当前微任务队列中的所有微任务（依次执行）。")]),t._v(" "),n("li",[t._v("当前宏任务执行完毕，开始检查渲染，然后 GUI 线程接管渲染。")]),t._v(" "),n("li",[t._v("渲染完毕后，JS 线程继续接管，开始下一个宏任务（从事件队列中获取）。")])]),t._v(" "),n("p",[t._v("如图：")]),t._v(" "),n("p",[n("img",{attrs:{src:a(218),alt:""}})]),t._v(" "),n("p",[t._v("另外，请注意下 "),n("code",[t._v("Promise")]),t._v(" 的 "),n("code",[t._v("polyfill")]),t._v(" 与官方版本的区别：")]),t._v(" "),n("ul",[n("li",[t._v("官方版本中，是标准的 "),n("code",[t._v("microtask")]),t._v(" 的形式。")]),t._v(" "),n("li",[t._v("polyfill，一般都是通过 "),n("code",[t._v("setTimeout")]),t._v(" 模拟的，所以是 "),n("code",[t._v("macrotask")]),t._v(" 形式。")]),t._v(" "),n("li",[t._v("请特别注意这两点区别")])]),t._v(" "),n("p",[t._v("注意，有一些浏览器执行结果不一样（因为它们可能把 microtask 当成 macrotask 来执行了），请记住，有些浏览器可能不标准。")])])}),[],!1,null,null,null);s.default=e.exports}}]);